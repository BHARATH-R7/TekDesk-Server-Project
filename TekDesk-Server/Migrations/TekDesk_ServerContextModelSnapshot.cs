// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using System.Diagnostics.CodeAnalysis;
using TekDesk_Server.Data;

namespace TekDesk_Server.Migrations
{
    [ExcludeFromCodeCoverage]
    [DbContext(typeof(TekDesk_ServerContext))]
    partial class TekDesk_ServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TekDesk_Server.Models.Categories", b =>
                {
                    b.Property<int>("CategoriesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriesID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TekDesk_Server.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("TekDesk_Server.Models.Query", b =>
                {
                    b.Property<int>("QueryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryCategoriesID")
                        .HasColumnType("int");

                    b.Property<string>("QContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("References")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserofQueryEmployeeID")
                        .HasColumnType("int");

                    b.HasKey("QueryID");

                    b.HasIndex("CategoryCategoriesID");

                    b.HasIndex("UserofQueryEmployeeID");

                    b.ToTable("Query");
                });

            modelBuilder.Entity("TekDesk_Server.Models.Solution", b =>
                {
                    b.Property<int>("SolutionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SolutionForQueryID")
                        .HasColumnType("int");

                    b.Property<string>("references")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SolutionID");

                    b.HasIndex("SolutionForQueryID");

                    b.ToTable("Solution");
                });

            modelBuilder.Entity("TekDesk_Server.Models.Query", b =>
                {
                    b.HasOne("TekDesk_Server.Models.Categories", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryCategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TekDesk_Server.Models.Employee", "UserofQuery")
                        .WithMany()
                        .HasForeignKey("UserofQueryEmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TekDesk_Server.Models.Solution", b =>
                {
                    b.HasOne("TekDesk_Server.Models.Query", "SolutionForQuery")
                        .WithMany()
                        .HasForeignKey("SolutionForQueryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
